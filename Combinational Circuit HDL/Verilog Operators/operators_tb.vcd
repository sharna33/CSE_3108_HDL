$date
	Thu May 16 16:10:39 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module operators_tb $end
$var wire 4 ! Shift [3:0] $end
$var wire 4 " Relational [3:0] $end
$var wire 4 # Reduction [3:0] $end
$var wire 4 $ Logical [3:0] $end
$var wire 4 % Equality [3:0] $end
$var wire 4 & Conditional [3:0] $end
$var wire 4 ' Concatenation [3:0] $end
$var wire 4 ( Bitwise [3:0] $end
$var wire 4 ) Arithmetic [3:0] $end
$var reg 4 * A [3:0] $end
$var reg 4 + B [3:0] $end
$var reg 4 , C [3:0] $end
$var reg 4 - D [3:0] $end
$scope module uut $end
$var wire 4 . A [3:0] $end
$var wire 4 / B [3:0] $end
$var wire 4 0 Bitwise [3:0] $end
$var wire 4 1 C [3:0] $end
$var wire 4 2 D [3:0] $end
$var wire 4 3 Shift [3:0] $end
$var wire 4 4 Relational [3:0] $end
$var wire 4 5 Reduction [3:0] $end
$var wire 4 6 Logical [3:0] $end
$var wire 4 7 Equality [3:0] $end
$var wire 4 8 Conditional [3:0] $end
$var wire 4 9 Concatenation [3:0] $end
$var wire 4 : Arithmetic [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1000 :
b1011 9
b1100 8
b0 7
b1 6
b1 5
b1 4
b1 3
b1100 2
b10 1
b10 0
b110 /
b1100 .
b1100 -
b10 ,
b110 +
b1100 *
b1000 )
b10 (
b1011 '
b1100 &
b0 %
b1 $
b1 #
b1 "
b1 !
$end
#20000
